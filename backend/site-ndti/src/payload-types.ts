/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    news: News;
    projects: Project;
    team: Team;
    equipment: Equipment;
    'site-images': SiteImage;
    'tipo-noticia': TipoNoticia;
    'categoria-projeto': CategoriaProjeto;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    news: NewsSelect<false> | NewsSelect<true>;
    projects: ProjectsSelect<false> | ProjectsSelect<true>;
    team: TeamSelect<false> | TeamSelect<true>;
    equipment: EquipmentSelect<false> | EquipmentSelect<true>;
    'site-images': SiteImagesSelect<false> | SiteImagesSelect<true>;
    'tipo-noticia': TipoNoticiaSelect<false> | TipoNoticiaSelect<true>;
    'categoria-projeto': CategoriaProjetoSelect<false> | CategoriaProjetoSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * Gerencie os usuários do sistema
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * Gerencie arquivos de mídia (imagens, documentos, etc.)
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    tablet?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * Gerencie as notícias e comunicados do NDTI
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "news".
 */
export interface News {
  id: number;
  title: string;
  description: string;
  date: string;
  content?:
    | {
        paragraph?: string | null;
        id?: string | null;
      }[]
    | null;
  image: number | Media;
  /**
   * Selecione o tipo de notícia
   */
  type: number | TipoNoticia;
  updatedAt: string;
  createdAt: string;
}
/**
 * Gerencie os tipos de notícias disponíveis
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tipo-noticia".
 */
export interface TipoNoticia {
  id: number;
  /**
   * Nome do tipo de notícia (ex: Edital, Evento, Projeto)
   */
  nome: string;
  /**
   * Descrição opcional do tipo de notícia
   */
  descricao?: string | null;
  /**
   * Define se este tipo está ativo para uso
   */
  ativo?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Gerencie os projetos desenvolvidos pelo NDTI
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "projects".
 */
export interface Project {
  id: number;
  title: string;
  category: number | CategoriaProjeto;
  image: number | Media;
  description: string;
  technologies?:
    | {
        technology?: string | null;
        id?: string | null;
      }[]
    | null;
  longDescription?:
    | {
        paragraph?: string | null;
        id?: string | null;
      }[]
    | null;
  features?:
    | {
        feature?: string | null;
        id?: string | null;
      }[]
    | null;
  startDate: string;
  status: string;
  team?:
    | {
        member?: string | null;
        id?: string | null;
      }[]
    | null;
  repository?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Gerencie as categorias de projetos disponíveis no sistema
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categoria-projeto".
 */
export interface CategoriaProjeto {
  id: number;
  /**
   * Nome da categoria de projeto (ex: Desenvolvimento Web, IoT & Software)
   */
  nome: string;
  /**
   * Descrição opcional da categoria
   */
  descricao?: string | null;
  /**
   * Marque para exibir esta categoria no sistema
   */
  ativo?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Gerencie os membros da equipe do NDTI
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "team".
 */
export interface Team {
  id: number;
  name: string;
  role: string;
  description?: string | null;
  image: number | Media;
  email?: string | null;
  linkedin?: string | null;
  github?: string | null;
  lattes?: string | null;
  skills?:
    | {
        skill?: string | null;
        id?: string | null;
      }[]
    | null;
  isActive?: boolean | null;
  order?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Gerencie os equipamentos do NDTI
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "equipment".
 */
export interface Equipment {
  id: number;
  /**
   * Nome do equipamento
   */
  name: string;
  /**
   * Marca do equipamento
   */
  brand: string;
  /**
   * Modelo do equipamento
   */
  model: string;
  /**
   * Ano em que o equipamento foi adquirido
   */
  acquisitionYear: number;
  /**
   * Código único de identificação do equipamento
   */
  code: string;
  /**
   * Status atual do equipamento
   */
  status: 'available' | 'maintenance' | 'unavailable' | 'out_of_order';
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "site-images".
 */
export interface SiteImage {
  id: number;
  slug: 'capa' | 'contra-capa';
  description?: string | null;
  image: number | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'news';
        value: number | News;
      } | null)
    | ({
        relationTo: 'projects';
        value: number | Project;
      } | null)
    | ({
        relationTo: 'team';
        value: number | Team;
      } | null)
    | ({
        relationTo: 'equipment';
        value: number | Equipment;
      } | null)
    | ({
        relationTo: 'site-images';
        value: number | SiteImage;
      } | null)
    | ({
        relationTo: 'tipo-noticia';
        value: number | TipoNoticia;
      } | null)
    | ({
        relationTo: 'categoria-projeto';
        value: number | CategoriaProjeto;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        card?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        tablet?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "news_select".
 */
export interface NewsSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  date?: T;
  content?:
    | T
    | {
        paragraph?: T;
        id?: T;
      };
  image?: T;
  type?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "projects_select".
 */
export interface ProjectsSelect<T extends boolean = true> {
  title?: T;
  category?: T;
  image?: T;
  description?: T;
  technologies?:
    | T
    | {
        technology?: T;
        id?: T;
      };
  longDescription?:
    | T
    | {
        paragraph?: T;
        id?: T;
      };
  features?:
    | T
    | {
        feature?: T;
        id?: T;
      };
  startDate?: T;
  status?: T;
  team?:
    | T
    | {
        member?: T;
        id?: T;
      };
  repository?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "team_select".
 */
export interface TeamSelect<T extends boolean = true> {
  name?: T;
  role?: T;
  description?: T;
  image?: T;
  email?: T;
  linkedin?: T;
  github?: T;
  lattes?: T;
  skills?:
    | T
    | {
        skill?: T;
        id?: T;
      };
  isActive?: T;
  order?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "equipment_select".
 */
export interface EquipmentSelect<T extends boolean = true> {
  name?: T;
  brand?: T;
  model?: T;
  acquisitionYear?: T;
  code?: T;
  status?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "site-images_select".
 */
export interface SiteImagesSelect<T extends boolean = true> {
  slug?: T;
  description?: T;
  image?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tipo-noticia_select".
 */
export interface TipoNoticiaSelect<T extends boolean = true> {
  nome?: T;
  descricao?: T;
  ativo?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categoria-projeto_select".
 */
export interface CategoriaProjetoSelect<T extends boolean = true> {
  nome?: T;
  descricao?: T;
  ativo?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}