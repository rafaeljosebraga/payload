services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: payload
      POSTGRES_USER: payload
      POSTGRES_PASSWORD: payload123
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d  # init scripts
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U payload -d payload"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Site Frontend (Vite + React)
  site:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    command: npm run dev
    stdin_open: true
    tty: true

  # Payload CMS Backend
  payload:
    build:
      context: ./backend/site-ndti
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./backend/site-ndti:/app
      - payload_node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    command: npm run dev:docker
    stdin_open: true
    tty: true
    depends_on:
      postgres:
        condition: service_healthy
      site:
        condition: service_started

volumes:
  payload_node_modules:
  postgres_data:

networks:
  default:
    driver: bridge
